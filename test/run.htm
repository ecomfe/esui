<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Jasmine Spec Runner</title>

    <link rel="stylesheet" href="asset/css/jasmine.css">
    <script src="asset/js/jasmine.js"></script>
    <script src="asset/js/jasmine-html.js"></script>
    <script src="matchers.js"></script>
    <script src="asset/js/esl.js"></script>
</head>
<body>
    <div id="container"></div>

    <script>
        require.config({
            'waitSeconds': 2,
            'baseUrl': '../src',
            'packages': [
                {
                    'name': 'esui',
                    'location': '../src',
                    'main': 'main'
                },
                {
                    'name': 'mini-event',
                    'location': '../dep/mini-event/1.0.2/src',
                    'main': 'main'
                },
                {
                    'name': 'underscore',
                    'location': '../dep/underscore/1.5.2/src',
                    'main': 'underscore'
                },
                {
                    'name': 'moment',
                    'location': '../dep/moment/2.7.0/src',
                    'main': 'moment'
                },
                {
                    'name': 'etpl',
                    'location': '../dep/etpl/3.0.0/src',
                    'main': 'main'
                },
                {
                    'name': 'esf',
                    'location': '../dep/esf/1.0.0-beta.1/src'
                },
                {
                    'name': 'est',
                    'location': '../dep/est/1.3.0/src'
                },
                {
                    'name': 'eicons',
                    'location': '../dep/eicons/1.0.0-beta.1/src',
                    'main': 'main.less'
                },
                {
                    'name': 'eoo',
                    'location': '../dep/eoo/0.1.2/src',
                    'main': 'main'
                }
            ],
            'paths': {}
        });
    </script>
    <script>
        function dispatchEvent(element, type, properties) {
            if (typeof document.createEvent === 'function') {
                var event = document.createEvent('Event');
                event.initEvent(type, true, false);
                for (var key in properties) {
                    if (properties.hasOwnProperty(key)) {
                        event[key] = properties[key];
                    }
                }
                element.dispatchEvent(event);
            }
            else {
                var event = document.createEventObject();
                for (var key in properties) {
                    if (properties.hasOwnProperty(key)) {
                        event[key] = properties[key];
                    }
                }
                element.fireEvent('on' + type, event);
            }
        }

        function getText(element) {
            return element.textContent || element.innerText;
        }

        function hasAttribute(element, name) {
            return element.hasAttribute
                ? element.hasAttribute(name)
                : (element.attributes[name] && element.attributes[name].specified);
        }

        var suits = [
            'esui', 'controlHelper', 'ViewContext', 'Validity', 'Control', 'InputControl', 'SafeWrapper',
            'Label', 'Panel', 'Select', 'Form', 'Tab', 'Crumb', 'Wizard', 'TextBox', 'SearchBox',
            'extension/CustomData', 'extension/Command',
            'helper/template'
        ];
        require(
            suits,
            function(esui) {
                afterEach(function () {
                    var container = document.getElementById('container');
                    esui.getViewContext().clean();
                    container.innerHTML = '';
                });

                var jasmineEnv = jasmine.getEnv();
                jasmineEnv.updateInterval = 1000;

                var htmlReporter = new jasmine.HtmlReporter();

                jasmineEnv.addReporter(htmlReporter);

                jasmineEnv.specFilter = function(spec) {
                    return htmlReporter.specFilter(spec);
                };

                jasmineEnv.execute();
            }
        );
    </script>
</body>
</html>
